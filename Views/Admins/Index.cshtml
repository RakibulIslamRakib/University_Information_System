@model PaginatedList<University_Information_System.Models.ApplicationUser>

<link rel="stylesheet" href="~/css/projects.css" />

<div class="mainDiv">


    <div class="grid-container">
    <form asp-action="Index" asp-controller="Admins" method="get" class="grid-container">
    <div class="form-actions no-color">
        <p>
                <input type="text" placeholder="search subject..." class="searchBar" 
                name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
                    <input type="button" class="btn"
                           value="Add Admin"
                           onclick="location.href='@Url.Action("Users", "User", new{fromAdmin = true})'" />
                </p>
    </div>
</form>

    
</div>

    <div class="gridRow">
        <h3 style="text-align:center; padding-top:10px;">User's List' : </h3>
        <form asp-action="Index" method="get">
            <div class="form-actions no-color">

                <label for="PageNumber"> Item per Page: </label>
                <input name="itemsPerPage" class="searchBar" style="width:40px" type"number" 
                value="@ViewData["ItemsPerPage"]" />
                <input type="submit" value="Show" class="btn" />
            </div>
        </form>

    </div>

<div >
    @{
     if (Model.Count == 0)

        {
                <div class="grid-containerList">
                <h3>User List Is Empty...</h3>
                </div>
        }

        else{

        foreach (var user in Model)
        {

                                    <div class="grid-containerList">
                                <p>
                                    Name :
                            <a asp-controller="User" asp-action="Profile"
                   asp-route-userId="@user.Id"> @(user.FirstName) @(user.LastName)</a>

                                </p>



                        @if (ViewData["currentUserEmail"].ToString() != user.Email)
                        {
                                <a class="deleteBtn" style="color:red" 
                                asp-controller="Admins" asp-action="DeleteAdmin"
                                asp-route-id="@user.Id"> Delete</a>
                        }
                                
                                    </div>
                
        }

}
    }
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
    <div class="paginationDiv">
        <div class="gridRow">
            <h4>Page No @(Model.PageIndex) of @(Model.TotalPages)</h4>

            <form asp-action="Teachers" method="get" class="grid-container">
                <div class="form-actions no-color">
                    <input type="hidden" name="ItemsPerPage" value="@ViewData["ItemsPerPage"]" />
                    <label for="PageNumber"> Goto Page</label>
                    <select name="PageNumber" class="searchBar" style="width:100px">
                        <option class="selectItem" value=@(Model.PageIndex)>--select--</option>
                        @foreach (int index in Enumerable.Range(1, (Model.TotalPages)))
                        {
                            <option class="selectItem" value=@(index)>Page : @(index)</option>
                        }
                    </select>
                    <input type="submit" value="Go" class="btn" />
                </div>
            </form>
        </div>

        <a asp-action="Index" asp-route-itemsPerPage="@ViewData["ItemsPerPage"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn @prevDisabled">
            Previous
        </a>


        @foreach (int page in Model.RangePageList)
        {
            if (page == Model.PageIndex)
            {
                <a asp-action="Index" class="selected"
           asp-route-pageNumber="@(page)" asp-route-itemsPerPage="@ViewData["ItemsPerPage"]"
           asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @(page)
                </a>
            }
            else
            {
                <a asp-action="Index" class="btn"
           asp-route-pageNumber="@(page)" asp-route-itemsPerPage="@ViewData["ItemsPerPage"]"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn">
                    @(page)
                </a>
            }
        }

        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-itemsPerPage="@ViewData["ItemsPerPage"]"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn @nextDisabled">
            Next
        </a>

    </div>

</div>
