@model PaginatedList<University_Information_System.Models.Notice>


<link rel="stylesheet" href="~/css/projects.css" />

@{
    ViewData["Title"] = "Home Page";
}


<div class="mainDiv">

@{
    if (TempData["success"] != null)
    {
                    <h3 class="headline"
                    style="align-content:center;
                                background-color: #04AA6D;
                                color: white;
                                padding: 12px 20px;
                                border: none;
                                border-radius: 4px;
                                text-align:center; height:30px;">
                        Message :   @TempData["success"]
                    </h3>
    }
}

<div class="grid-container">
    <form asp-action="Index" method="get" class="item-1">
        <div class="form-actions no-color">
            <p>
                <input class="searchBar" placeholder="Search notice..." type="text"
                 name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-default" />
                    <input type="button" class="btn"
                           value="Add New Notice"
                           onclick="location.href='@Url.Action("AddNotice", "Home")'" />
            </p>
        </div>
    </form>

 </div>
    <div class="gridRow">
        <h3 style="text-align:center; padding-top:10px;">Notice Board : </h3>
        <form asp-action="Index" method="get">
            <div class="form-actions no-color">

                <label for="PageNumber"> Item per Page: </label>
                <input name="itemsPerPage" class="searchBar" style="width:40px" type"number" value="@ViewData["ItemsPerPage"]" />
                <input type="submit" value="Show" class="btn" />
            </div>
        </form>

    </div>


<div class="cards">
        
        @if (Model.Count == 0)
        {
            <h3>Notice List Empty...</h3>
        }
        else
        foreach (var notice in Model)
        {

                <div class="card">
                        <div class="card__header">
                            <h4 class="card__title">@(notice.NoticeTitle) </h4>

                    </div>
                  
                        <div class="card__body">
                            <span class="tag">Created : @(notice.CreatedDate)</span>
                            <span class="tag">Author : @(notice.Creator)</span>
                        <p style="font-size:14px">Descryption :<br> @(notice.Descryption.Count() > 40 ? notice.Descryption.Substring(40)+"...." : notice.Descryption)</p>
                        </div>


                            <div class="card__footer">
                                <div class="button-group">
                            <a class="detailsBtn"
                       asp-conztroller="Home" asp-action="DetailsNotice"
                       asp-route-id=@notice.id> See details..</a>
                            <a class="updateBtn"
               asp-conztroller="Home" asp-action="UpdateNotice" asp-route-id="@notice.id"> Update</a>
                            <a class="deleteBtn"
               asp-conztroller="Home" asp-action="DeleteNotice" asp-route-id="@notice.id"> Delete</a>
                    </div>
                            </div>
                </div>


    }
</div>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

    <div class="paginationDiv">
        <div class="gridRow">
            <h4>Page No @(Model.PageIndex) of @(Model.TotalPages)</h4>

            <form asp-action="Index" method="get" class="grid-container">
                <div class="form-actions no-color">
                    <input type="hidden" name="ItemsPerPage" value="@ViewData["ItemsPerPage"]" />
                    <label for="PageNumber"> Goto Page</label>
                    <select name="PageNumber" class="searchBar" style="width:100px">
                        <option class="selectItem" value=@(Model.PageIndex)>--select--</option>
                        @foreach (int index in Enumerable.Range(1, (Model.TotalPages)))
                        {
                            <option class="selectItem" value=@(index)>Page : @(index)</option>
                        }
                    </select>
                    <input type="submit" value="Go" class="btn" />
                </div>
            </form>
        </div>

        <a asp-action="Index" asp-route-itemsPerPage="@ViewData["ItemsPerPage"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn @prevDisabled">
            Previous
        </a>


        @foreach (int page in Model.RangePageList)
        {
            if (page == Model.PageIndex)
            {
                <a asp-action="Index" class="selected"
           asp-route-pageNumber="@(page)" asp-route-itemsPerPage="@ViewData["ItemsPerPage"]"
           asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @(page)
                </a>
            }
            else
            {
                <a asp-action="Index" class="btn"
           asp-route-pageNumber="@(page)" asp-route-itemsPerPage="@ViewData["ItemsPerPage"]"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn">
                    @(page)
                </a>
            }
        }

        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-itemsPerPage="@ViewData["ItemsPerPage"]"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn @nextDisabled">
            Next
        </a>

    </div>

 

</div>